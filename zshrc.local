PATH="./bin:/usr/local/bin:/usr/local/sbin:/usr/local/git/bin:$PATH"
cdpath=($HOME/Sites $HOME/projects $HOME/repos)

export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

export PATH="$HOME/.bin:$PATH"
export PATH="$HOME/Library/Python/3.8/bin:$PATH"
# NOTE: This is the default location for pipx:
export PATH="$HOME/.local/bin:$PATH"

# Go Repos
export GOPATH=$HOME/repos/go_repos
export PATH=$PATH:$GOPATH/bin

# Kubernetes Config
export KUBECONFIG="$HOME/.kube/config:$HOME/.kube/test-config"

eval "$(/opt/homebrew/bin/brew shellenv)"

# TODO: Move these functions into a functions directory.
function pwpush {
  readonly password=${1:?"The password must be specified."}

  link=$(
    curl -X POST --silent \
    --data "password[payload]=$password&password[expire_after_days]=2&password[expire_after_views]=3" https://pwpush.com/p.json | \
    python3 -c "import sys, json; print(f'https://pwpush.com/p/{json.load(sys.stdin)[\"url_token\"]}')"
  )
  print $link
  echo $link | pbcopy
}

function kill_spotify {
  ps -ax | grep -m1 Spotify | awk '{kill $1}'
}

# NOTE: Set username and password variables and run with
# `add_aws_access $AWS_USER $PASSWORD`
function add_aws_access {
    readonly username=${1:?"The username must be specified."}
    readonly password=${2:?"The password must be specified."}
    # NOTE: AWS users should be created in terraform, not here.
    # aws iam create-user --user-name $username
    aws iam create-login-profile --user-name $username --password $password --no-password-reset-required

    AWS_ACCOUNT_ALIAS=$(aws --output text iam list-account-aliases --query 'AccountAliases[0]')
    print "Console access:"
    print "Link:"
    print "https://${AWS_ACCOUNT_ALIAS}.signin.aws.amazon.com/console/"
    print "Username: $username"
    print "Password:"
    pwpush $password

    print ""
    print "CLI Access:"
    creds=$(aws iam create-access-key --user-name $username | \
      python3 -c "import sys, json; key = json.load(sys.stdin)['AccessKey']; print(f'Key: {key[\"AccessKeyId\"]}\nSecret: {key[\"SecretAccessKey\"]}')"
    )
    pwpush $creds
}

function rm_aws_access {
  readonly username=${1:?"The username must be specified."}
  aws iam delete-login-profile --user-name $username
}

# NOTE: The laptop script does attempt to insert asdf into this file but it ties
# to a specific user and doesn't include completions. Perhaps best to include
# it here directly instead of relying on the laptop script. Reference:
#
# https://asdf-vm.com/#/core-manage-asdf-vm
. $HOME/.asdf/asdf.sh
fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz compinit
compinit
